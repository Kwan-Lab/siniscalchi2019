function plot_pcorr(input)
% % plot_pcorr %
%PURPOSE:   Plot pairwise correlation
%AUTHORS:   AC Kwan 180625
%
%INPUT ARGUMENTS
%   input:        Structure generated by pairwiseCorr().
%
%OUTPUT ARGUMENTS


%% Plotting parameters
colors=cbrewer('div','RdBu',256);
colors=flipud(colors);

gray=[0.7 0.7 0.7];

%% setup

if iscell(input)
    corrVals=[]; corrVals_randsig=[]; corrVals_scram=[];
    for k=1:numel(input)
        nCells = size(input{k}.pcorr,1);
        mask = triu(true(nCells),1); %upper diagonal of the matrix

        upDiag=[]; upDiag_randsig=[]; upDiag_scram=[];
        for j=1:size(input{k}.pcorr,3)
            temp=input{k}.pcorr(:,:,j);
            upDiag(:,:,j) = temp(mask);
            temp=input{k}.pcorr_randsig(:,:,j);
            upDiag_randsig(:,:,j) = temp(mask);
            temp=input{k}.pcorr_scram(:,:,j);
            upDiag_scram(:,:,j) = temp(mask);
        end
    
        corrVals = [corrVals; upDiag(:)];
        corrVals_randsig = [corrVals_randsig; upDiag_randsig(:)];
        corrVals_scram = [corrVals_scram; upDiag_scram(:)];

        corrmean(k) = nanmean(upDiag(:));
        corrmean_randsig(k) = nanmean(upDiag_randsig(:));
        corrmean_scram(k) = nanmean(upDiag_scram(:));        

        corrmagmean(k) = nanmean(abs(upDiag(:)));
        corrmagmean_randsig(k) = nanmean(abs(upDiag_randsig(:)));
        corrmagmean_scram(k) = nanmean(abs(upDiag_scram(:)));        

    end
else
    nCells = size(input.pcorr,1);
    
    %using all data
    mask = triu(true(nCells),1); %upper diagonal of the matrix
    for j=1:size(input.pcorr,3)
        temp=input.pcorr(:,:,j);
        upDiag(:,:,j) = temp(mask);   
        temp=input.pcorr_randsig(:,:,j);
        upDiag_randsig(:,:,j) = temp(mask);
        temp=input.pcorr_scram(:,:,j);
        upDiag_scram(:,:,j) = temp(mask);
    end
    corrVals(:,1) = upDiag(:);
    corrVals_randsig(:,1) = upDiag_randsig(:);
    corrVals_scram(:,1) = upDiag_scram(:);
    corrmean(1) = nanmean(upDiag(:));
    corrmean_randsig(1) = nanmean(upDiag_randsig(:));
    corrmean_scram(1) = nanmean(upDiag_scram(:));
    corrmagmean(1) = nanmean(abs(upDiag(:)));
    corrmagmean_randsig(1) = nanmean(abs(upDiag_randsig(:)));
    corrmagmean_scram(1) = nanmean(abs(upDiag_scram(:)));
end

minY = -1;
maxY = 1;

%% Make the pseudo-color plots

figure;

%can only plot covariance matrix for one session
%sessions has different number of cells, cannot be averaged across sessions
if ~iscell(input)
    subplot(2,7,[1 2]);
    image(1:nCells,1:nCells,input.pcorr(:,:,1),'CDataMapping','scaled');
    colormap(colors);
    caxis([minY maxY]);      %normalize dF/F heatmap to max of all conditions
    ylabel('Cells');
    xlabel('Cells');
    set(gca,'YTick',[0:10:nCells]); set(gca,'XTick',[0:10:nCells]);
    title('Ensemble');
    axis square;
    
    subplot(2,7,[3 4]);
    image(1:nCells,1:nCells,input.pcorr_randsig(:,:,1),'CDataMapping','scaled');
    colormap(colors);
    caxis([minY maxY]);      %normalize dF/F heatmap to max of all conditions
    xlabel('Cells');
    set(gca,'YTick',[]); set(gca,'XTick',[0:10:nCells]);
    title({'Pseudo-ensemble';'(trial outcome preserved)'});
    axis square;
    
    subplot(2,7,[5 6]);
    image(1:nCells,1:nCells,input.pcorr_scram(:,:,1),'CDataMapping','scaled');
    colormap(colors);
    caxis([minY maxY]);      %normalize dF/F heatmap to max of all conditions
    xlabel('Cells');
    set(gca,'YTick',[]); set(gca,'XTick',[0:10:nCells]);
    title('Scramble');
    axis square;
    
    %make a color scale bar
    subplot(4,15,30);
    image(0,linspace(minY,maxY,100),linspace(minY,maxY,100)','CDataMapping','scaled');
    colormap(colors);
    caxis([minY maxY]);
    title('Corr. coefficient');
    set(gca,'YDir','normal');
    set(gca,'XTick',[]);
end

%% histograms

edges=[-1:0.01:1];
n=histc(corrVals,edges);
n_randsig=histc(corrVals_randsig,edges);
n_scram=histc(corrVals_scram,edges);

subplot(4,2,5); hold on;
h1=bar(edges,n,'histc');
set(h1,'FaceColor','k');
set(h1,'EdgeColor','k');
ylabel('Number of cell pairs');
xlim([-1 1]); ylim([0 max([n; n_randsig; n_scram])]);
set(gca,'YTick',[]);

subplot(4,2,7); hold on;
h2=bar(edges,n_randsig,'histc');
set(h2,'FaceColor','r');
set(h2,'EdgeColor','r');
xlabel('Pairwise correlation');
xlim([-1 1]); ylim([0 max([n; n_randsig; n_scram])]);
set(gca,'YTick',[]);

%% population summary - mean CC
subplot(2,4,7); hold on;

for k=1:numel(input)
    plot([1 2],[corrmean(k) corrmean_randsig(k)],'Color',gray,'LineWidth',2);
end
plot(1+[-0.3 0.3],nanmean(corrmean)*[1 1],'k-','LineWidth',3);
plot(2+[-0.3 0.3],nanmean(corrmean_randsig)*[1 1],'k-','LineWidth',3);
plot([1 1],nanmean(corrmean)+nanstd(corrmean)/sqrt(numel(corrmean))*[-1 1],'k-','LineWidth',3);
plot([2 2],nanmean(corrmean_randsig)+nanstd(corrmean_randsig)/sqrt(numel(corrmean_randsig))*[-1 1],'k-','LineWidth',3);
plot([0 3],[0 0],'k--','LineWidth',2);
xlim([0 3]);
ylim([-0.05 0.45]);
set(gca,'xtick',[1 2]);
set(gca,'xticklabel',{'Ensemble','Pseudo-ensemble'});
ylabel('Mean pairwise correlation');

[mean(corrmean) std(corrmean)/sqrt(numel(corrmean))]
[mean(corrmean_randsig) std(corrmean_randsig)/sqrt(numel(corrmean_randsig))]
[p,h,stats]=signrank(corrmean,corrmean_randsig);
p

%% population summary - mean |CC|
subplot(2,4,8); hold on;

for k=1:numel(input)
    plot([1 2],[corrmagmean(k) corrmagmean_randsig(k)],'Color',gray,'LineWidth',2);
end
plot(1+[-0.3 0.3],nanmean(corrmagmean)*[1 1],'k-','LineWidth',3);
plot(2+[-0.3 0.3],nanmean(corrmagmean_randsig)*[1 1],'k-','LineWidth',3);
plot([1 1],nanmean(corrmagmean)+nanstd(corrmagmean)/sqrt(numel(corrmagmean))*[-1 1],'k-','LineWidth',3);
plot([2 2],nanmean(corrmagmean_randsig)+nanstd(corrmagmean_randsig)/sqrt(numel(corrmagmean_randsig))*[-1 1],'k-','LineWidth',3);
plot([0 3],[0 0],'k--','LineWidth',2);
xlim([0 3]);
ylim([-0.05 0.45]);
set(gca,'xtick',[1 2]);
set(gca,'xticklabel',{'Ensemble','Pseudo-ensemble'});
ylabel('Mean magnitude of pairwise correlation');

[mean(corrmagmean) std(corrmagmean)/sqrt(numel(corrmagmean))]
[mean(corrmagmean_randsig) std(corrmagmean_randsig)/sqrt(numel(corrmagmean_randsig))]
[p,h,stats]=signrank(corrmagmean,corrmagmean_randsig);
p

end
