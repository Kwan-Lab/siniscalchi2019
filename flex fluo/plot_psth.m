function plot_psth(input,tlabel,xtitle)
% % plot_psth %
%PURPOSE:   Plot PSTH
%AUTHORS:   AC Kwan 170515
%
%INPUT ARGUMENTS
%   input:        Structure generated by get_psth().
%   tlabel:       Text to put as title of the plot.
%   xtitle:       Text to put as the label for x-axis.

%% Setup
t=input(1).sig{1}.t;
nPanel=numel(input);  %how many panel?

nSig=[];    %how many signals/psth in each panel?
for j=1:nPanel
    nSig(j)=numel(input(j).sig);
end

%set up the y-axis range 
if isfield(input(1).sig{1},'bootlow') %if CIs are available, use those to set the range
    templow=[]; temphigh=[];
    for j=1:nPanel
        for k=1:nSig(j)
            templow=[templow; input(j).sig{k}.bootlow];
            temphigh=[temphigh; input(j).sig{k}.boothigh];
        end
    end
    minY=nanmin(templow)-0.5;
    maxY=nanmax(temphigh)+0.5;
else
    tempsig=[];
    for j=1:nPanel
        for k=1:nSig(j)
            tempsig=[tempsig; input(j).sig{k}.signal];
        end
    end
    minY=nanmin(tempsig)-0.2;
    maxY=nanmax(tempsig)+0.2;
end

%% 
figure;
for j=1:nPanel
    
    subplot(1,nPanel,j); hold on;
    
    % plot the shaded errors
    if isfield(input(j).sig{k},'bootlow') %if CIs are available, plot them
        for k=1:nSig(j)
            errorshade(t,input(j).sig{k}.bootlow,input(j).sig{k}.boothigh,input(j).col{k},0.2);
        end
    end
    
    % plot the mean signals now, so they lie on top of shaded errors
    h=[]; legstring=[];
    for k=1:nSig(j)
        h(k) = plot(t,input(j).sig{k}.signal,input(j).linstyle{k},'Color',input(j).col{k});
        legstring{k}=input(j).sig{k}.psth_label;
    end

    % plot a line at t=0
    plot([0 0],[minY maxY],'k','LineWidth',2);
    
    % figure legend
    legend(h,legstring);
    
    xlabel(xtitle); ylabel('dF/F');
    ylim([minY maxY]);
    xlim([t(1) t(end)]);
    title(tlabel);
    
end

end


