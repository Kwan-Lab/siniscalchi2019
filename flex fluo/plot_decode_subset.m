function plot_decode_subset(input,tlabel)
% % plot_decode_subset %
%PURPOSE:   Plot results from decoding analysis, where cells were added one
%           at a time to construct an ensemble
%AUTHORS:   AC Kwan 171212
%
%INPUT ARGUMENTS
%   input:        Structure generated by decode_linearclassifier().
%   tlabel:       Text to put for figure title

%% setup

if iscell(input)
    cellNum = input{1}.cellNum;
    if isfield(input{1},'numDraw')
        numRepeat=input{1}.numDraw * input{1}.numRepeat;
    else
        numRepeat=input{1}.numRepeat;
    end
    for j=1:numel(input)
        corrPred(:,1,j)=nanmean(input{j}.corrPred,2);
        corrPred(:,2,j)=nanmean(input{j}.corrPred_randsig,2);
        corrPred(:,3,j)=nanmean(input{j}.corrPred_scram,2);
    end
    subtitle = strjoin(input{1}.fieldname);
else
    cellNum = input.cellNum;
    if isfield(input,'numDraw')
        numRepeat=input.numDraw * input.numRepeat;
    else
        numRepeat=input.numRepeat;
    end
    corrPred(:,1)=nanmean(input.corrPred,2);
    corrPred(:,2)=nanmean(input.corrPred_randsig,2);
    corrPred(:,3)=nanmean(input.corrPred_scram,2);
    subtitle = strjoin(input.fieldname);
end

maxY = 100;
minY = 100*min(corrPred(:)) - 10; %10% less than the smallest data point

%% plot results

figure;

subplot(2,3,1); hold on;
plot(cellNum,100*nanmean(corrPred(:,1,:),3),'k.-','MarkerSize',30,'LineWidth',3); %actual events
plot(cellNum,100*nanmean(corrPred(:,2,:),3),'r.-','MarkerSize',30,'LineWidth',3); %as if cells not recorded simultaneously
plot(cellNum,100*nanmean(corrPred(:,3,:),3),'k.--','MarkerSize',30,'LineWidth',3);
for ll=1:numel(cellNum)
    plot(cellNum(ll)*[1 1],100*nanmean(corrPred(ll,1,:))+100*nanstd(corrPred(ll,1,:))/sqrt(size(corrPred,3))*[-1 1],'k-','LineWidth',3);
    plot(cellNum(ll)*[1 1],100*nanmean(corrPred(ll,2,:))+100*nanstd(corrPred(ll,2,:))/sqrt(size(corrPred,3))*[-1 1],'r-','LineWidth',3);
    plot(cellNum(ll)*[1 1],100*nanmean(corrPred(ll,3,:))+100*nanstd(corrPred(ll,3,:))/sqrt(size(corrPred,3))*[-1 1],'k-','LineWidth',3);
end
xlim([cellNum(1)-1 cellNum(end)+1]);
ylim([minY maxY]);
xlabel('Number of cells in ensemble');
ylabel('Decoding accuracy (%)');
title({tlabel;['Number of repeats: ' int2str(numRepeat)];char(subtitle)});

%% identifying significant points
pvalThresh=0.01;

%non-parametric test
sig_randsig=[]; sig_scram=[];
for ll=1:numel(cellNum)
    [p,~]=signrank(squeeze(corrPred(ll,1,:)),squeeze(corrPred(ll,3,:)));
    sig_scram(ll)=p;  %diff between simult ensemble vs shuffle
    [p,~]=signrank(squeeze(corrPred(ll,2,:)),squeeze(corrPred(ll,3,:)));
    sig_randsig(ll)=p; %diff between fake ensemble vs shuffle
end

%plot a horizontal line for significant portion
for ll=1:numel(cellNum)
    if ll == 1
        x1 = 0;
        x2 = (cellNum(ll) + cellNum(ll+1))/2;
    elseif ll == numel(cellNum)
        x1 = (cellNum(ll-1) + cellNum(ll))/2;
        x2 = cellNum(ll) + 0.5;
    else    
        x1 = (cellNum(ll-1) + cellNum(ll))/2;
        x2 = (cellNum(ll) + cellNum(ll+1))/2;
    end
    if sig_randsig(ll)<pvalThresh
        plot([x1 x2],[90 90],'r-','LineWidth',5);
    end
    if sig_scram(ll)<pvalThresh
        plot([x1 x2],[95 95],'k-','LineWidth',5);
    end
end

legend('Data - ensemble','Data - pseudo-ensemble','Task-event scrambled','location','SouthEast');

%%

%marginal change in decoding accuracy
margPred=diff(corrPred,1);

subplot(2,3,2); hold on;
plot(cellNum(2:end),100*nanmean(margPred(:,1,:),3),'k.-','MarkerSize',30,'LineWidth',3); %actual events
plot(cellNum(2:end),100*nanmean(margPred(:,2,:),3),'r.-','MarkerSize',30,'LineWidth',3); %as if cells not recorded simultaneously
for ll=1:numel(cellNum)-1
    plot(cellNum(ll+1)*[1 1],100*nanmean(margPred(ll,1,:))+100*nanstd(margPred(ll,1,:))/sqrt(size(margPred,3))*[-1 1],'k-','LineWidth',3);
    plot(cellNum(ll+1)*[1 1],100*nanmean(margPred(ll,2,:))+100*nanstd(margPred(ll,2,:))/sqrt(size(margPred,3))*[-1 1],'r-','LineWidth',3);
end
plot([0 cellNum(end)],[0 0],'k-','LineWidth',2);
xlim([cellNum(1)-1 cellNum(end)+1]);
ylim([-2 8]);
xlabel('Number of cells in ensemble');
ylabel({'Marginal increase in';'decoding accuracy (%)'});
title({tlabel;['Number of repeats: ' int2str(numRepeat)];char(subtitle)});

disp('2nd cell vs 10th cell added, ensemble');
[nanmean(margPred(2,1,:)) nanstd(margPred(2,1,:))/sqrt(size(margPred,3))]
[nanmean(margPred(10,1,:)) nanstd(margPred(10,1,:))/sqrt(size(margPred,3))]
p=signrank(squeeze(margPred(2,1,:)),squeeze(margPred(10,1,:)))

disp('2nd cell vs 10th cell added, pseudo-ensemble');
[nanmean(margPred(2,2,:)) nanstd(margPred(2,2,:))/sqrt(size(margPred,3))]
[nanmean(margPred(10,2,:)) nanstd(margPred(10,2,:))/sqrt(size(margPred,3))]
p=signrank(squeeze(margPred(2,2,:)),squeeze(margPred(10,2,:)))

%%
subplot(2,3,5); hold on;
plot(cellNum(2:end),100*nanmean(margPred(:,1,:)-margPred(:,2,:),3),'k.-','MarkerSize',30,'LineWidth',3); %actual events
plot([0 cellNum(end)],[0 0],'k-','LineWidth',2);
xlim([cellNum(1)-1 cellNum(end)+1]);
ylim([-2 8]);
title('(black line - red line) from Panel 2');

subplot(2,3,6); hold on;
plot(cellNum(2:end),100*cumsum(nanmean(margPred(:,1,:)-margPred(:,2,:),3)),'k.-','MarkerSize',30,'LineWidth',3); %actual events
plot([0 cellNum(end)],[0 0],'k-','LineWidth',2);
xlim([cellNum(1)-1 cellNum(end)+1]);
ylim([-2 8]);
title('Cumsum on Panel 5');

%% plot the difference in decoding accuracy (ensemble minus pseudoensemble)

corrDiff = squeeze(corrPred(:,1,:) - corrPred(:,2,:));

subplot(2,3,3); hold on;
plot(cellNum,100*nanmean(corrDiff,2),'k.-','MarkerSize',30,'LineWidth',3); 
for ll=1:numel(cellNum)
    plot(cellNum(ll)*[1 1],100*nanmean(corrDiff(ll,:))+100*nanstd(corrDiff(ll,:))/sqrt(size(corrDiff,2))*[-1 1],'k-','LineWidth',3);
end
plot([cellNum(1)-1 cellNum(end)+1],[0 0],'k','LineWidth',1);
xlim([cellNum(1)-1 cellNum(end)+1]);
ylim([-2 8]);
xlabel('Number of cells in ensemble');
ylabel({'Ensemble vs. pseudo-ensemble';'difference in decoding accuracy (%)'});
title({tlabel;['Number of repeats: ' int2str(numRepeat)];char(subtitle)});

disp('Rank correlation, between cell number and decoding accuracy difference');
[rho,p_val]=corr(cellNum',100*nanmean(corrDiff,2),'type','Spearman');
rho
p_val

%% identifying significant points
pvalThresh=0.01;

%non-parametric test
sig_diff=[];
for ll=1:numel(cellNum)
    [p,~]=signrank(squeeze(corrPred(ll,1,:)),squeeze(corrPred(ll,2,:)));
    sig_diff(ll)=p;   %diff between simult ensemble vs fake ensemble
end

%plot a horizontal line for significant portion
for ll=1:numel(cellNum)
    if ll == 1
        x1 = 0;
        x2 = (cellNum(ll) + cellNum(ll+1))/2;
    elseif ll == numel(cellNum)
        x1 = (cellNum(ll-1) + cellNum(ll))/2;
        x2 = cellNum(ll) + 0.5;
    else    
        x1 = (cellNum(ll-1) + cellNum(ll))/2;
        x2 = (cellNum(ll) + cellNum(ll+1))/2;
    end
    if sig_diff(ll)<pvalThresh
        plot([x1 x2],[7 7],'k-','LineWidth',5);
    end
end

end
