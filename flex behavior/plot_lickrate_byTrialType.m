function plot_lickrate_byTrialType(input)
% % plot_lickrate_byTrialType %
%PURPOSE:   Plot lick rates for different trial types
%AUTHORS:   AC Kwan 170518
%
%INPUT ARGUMENTS
%   input:        Structure generated by get_lickrate_byTrialType().
%   tlabel:       Text to put as title of the plot.

%%
% if called from single-session analysis, input is a struct
% if called from summary analysis, input is a cell array
% here convert everything to a cell array first
if ~iscell(input)
    temp = input;
    clear input;
    input{1} = temp;
end

% load from the cell array
edges=input{1}.edges;
trialType=input{1}.trialType;

for j=1:numel(input)
    for l=1:numel(trialType)
        if j==1     %first time, load the array
            temp_u_lTimes{l}=input{j}.up_leftTimes{l};
            temp_u_rTimes{l}=input{j}.up_rightTimes{l};
            temp_d_lTimes{l}=input{j}.down_leftTimes{l};
            temp_d_rTimes{l}=input{j}.down_rightTimes{l};
        else        %otherwise, append
            temp_u_lTimes{l}=[(up_leftTimes{l}) input{j}.up_leftTimes{l}];
            temp_u_rTimes{l}=[(up_rightTimes{l}) input{j}.up_rightTimes{l}];
            temp_d_lTimes{l}=[(down_leftTimes{l}) input{j}.down_leftTimes{l}];
            temp_d_rTimes{l}=[(down_rightTimes{l}) input{j}.down_rightTimes{l}];
        end
    end
    up_leftTimes=temp_u_lTimes; clear temp_u_lTimes;
    up_rightTimes=temp_u_rTimes; clear temp_u_rTimes;
    down_leftTimes=temp_d_lTimes; clear temp_d_lTimes;
    down_rightTimes=temp_d_rTimes; clear temp_d_rTimes;
end

%% calculate mean and sem
edges=edges(1:end-1)+nanmean(diff(edges))/2;   %plot using the center of the histogram bins

u_lTimes=nan(numel(edges),numel(trialType)); % of choosing left
u_rTimes=nan(numel(edges),numel(trialType)); % of choosing right
d_lTimes=nan(numel(edges),numel(trialType)); % of choosing left
d_rTimes=nan(numel(edges),numel(trialType)); % of choosing right
for j=1:numel(trialType)
    u_lTimes(:,j)=nanmean(up_leftTimes{j},2);
    u_rTimes(:,j)=nanmean(up_rightTimes{j},2);
    d_lTimes(:,j)=nanmean(down_leftTimes{j},2);
    d_rTimes(:,j)=nanmean(down_rightTimes{j},2);
    
    u_lTimes_sem(:,j)=nanstd(up_leftTimes{j},[],2)./sqrt(numel(input));
    u_rTimes_sem(:,j)=nanstd(up_rightTimes{j},[],2)./sqrt(numel(input));
    d_lTimes_sem(:,j)=nanstd(down_leftTimes{j},[],2)./sqrt(numel(input));
    d_rTimes_sem(:,j)=nanstd(down_rightTimes{j},[],2)./sqrt(numel(input));
end

%% plot
%colors={'k','r','b','g'};
colors={'r','r','r','r'};
figure;

panel_h=2*numel(trialType);

for j=1:numel(trialType)
    
    subplot(2,panel_h,(j-1)*2+1); hold on;
    plot(edges,u_lTimes(:,j),'-','Linewidth',3,'Color',colors{j});
    plot([0 0],[0 10],'k--','LineWidth',2);
    if j==1
        ylabel({'Upsweep trials';'Lick density (Hz)'});
    end
    axis([edges(1) edges(end) 0 10]);
    title({trialType{j};'Left lick'},'interpreter','none');
    
    subplot(2,panel_h,(j-1)*2+2); hold on;
    plot(edges,u_rTimes(:,j),'-','Linewidth',3,'Color',colors{j});
    plot([0 0],[0 10],'k--','LineWidth',2);
    title({trialType{j};'Right lick'},'interpreter','none');
    axis([edges(1) edges(end) 0 10]);
    
    subplot(2,panel_h,panel_h+(j-1)*2+1); hold on;
    plot(edges,d_lTimes(:,j),'-','Linewidth',3,'Color',colors{j});
    plot([0 0],[0 10],'k--','LineWidth',2);
    ylabel({'Downsweep trials';'Lick density (Hz)'});
    xlabel('Time from cue (s)');
    axis([edges(1) edges(end) 0 10]);
    title({trialType{j};'Left lick'},'interpreter','none');
    
    subplot(2,panel_h,panel_h+(j-1)*2+2); hold on;
    plot(edges,d_rTimes(:,j),'-','Linewidth',3,'Color',colors{j});
    plot([0 0],[0 10],'k--','LineWidth',2);
    ylabel({'Downsweep trials';'Lick density (Hz)'});
    xlabel('Time from cue (s)');    title({trialType{j};'Right lick'},'interpreter','none');
    axis([edges(1) edges(end) 0 10]);
    
end

print(gcf,'-dpng','lickrates_byTrialType');    %png format
saveas(gcf, 'lickrates_byTrialType', 'fig');

end


